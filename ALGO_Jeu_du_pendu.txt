//ALGORITHME : Jeu_du_pendu (input,output)
//BUT : Le jeu du pendu consiste à
//trouver un mot caché, dont
//on connait initialement le
//nombre de lettres. Lors de
//chaque coup joué, le joueur
//propose une lettre :
//- si celle-ci figure dans le
//mot caché, elle y apparaît à
//sa (ou ses) place(s) ;
//- sinon, un élément d’une
//potence (avec un pendu) est
//dessiné :
//Le jeu se termine lorsque le
//joueur a trouvé le mot (il a
//alors gagné) ou lorsque la
//potence avec le pendu est
//entièrement dessinée (le
//joueur a alors perdu).
//ENTREE : le mot à deviner et les lettres choisies
//SORTIE : un nombre de tirets équivalent au nombre de lettres du mot, les lettres sur les emplacements vides à leurs positions si elles sont présentes ou non dans le mot, une potence qui se construit en cas d'erreur, gagné ou perdu à la fin de la partie

//Création du mot caché
procedure CreatMotCache (var Mot:CHAINE;var LongMot:ENTIER)
		DEBUT
        ECRIRE("Veuillez entrer un mot a deviner")
        REPETER
                LIRE(Mot)//Entree du Mot
        JUSQU'A (LONGUEUR(Mot)>=1)
        LongMot<--LONGUEUR(Mot) //On y stocke la longueur
		FinProcedure


//Affichage des lettres cachées
procedure AffNbLettres (var LongMot:ENTIER)
        var
                i:ENTIER

        DEBUT
        GoToXY(40,2)
        ECRIRE("! MOT A TROUVER !")
        //Positionnement des tirets
        POUR i DE 40 A LongMot+39 FAIRE
                GoToXY(i,3)
                ECRIRE("-")
        FinPour
        FinProcedure

//Choix de lettre
procedure ChoixLettre (var Mot:CHAINE;var LongMot:ENTIER;var choix:CARACTERE)
        DEBUT
        REPETER
                GoToXY(1,3)
                ECRIRE("Veuillez entrer une lettre : ")
                LIRE(choix)
        JUSQU'A (LONGUEUR(choix)=1)
        FinProcedure

//Affichage de la potence
procedure Potence (var Erreur:ENTIER)
        var
                i:ENTIER

        DEBUT
        //Pied potence
        SI Erreur=1 ALORS
                POUR i DE 1 A 3 FAIRE
                        GoToXY(i,11)
                        ECRIRE("_")
                FinPour
        FinSi

        //Barre verticale
        SI Erreur=2 ALORS
                POUR i DE 5 A 11 FAIRE
                        GoToXY(2,i)
                        ECRIRE("|")
                FinPour
        FinSi

        //Barre horizontale
        SI Erreur=3 ALORS
                POUR i DE 1 A 7 FAIRE
                        GoToXY(i,5)
                        ECRIRE("_")
                FinPour
        FinSi

        //Corde
        SI Erreur=4 ALORS
                GoToXY(6,6)
                ECRIRE("|")
        FinSi

        //Tête
        SI Erreur=5 ALORS
                GoToXY(6,7)
                ECRIRE("0")
        FinSi

        //Corps
        SI Erreur=6 ALORS
                GoToXY(6,8)
                ECRIRE("|")
        FinSi

        //Bras gauche
        SI Erreur=7 ALORS
                GoToXY(5,8)
                ECRIRE("/")
        FinSi

        //Bras droit
        SI Erreur=8 ALORS
                GoToXY(7,8)
                ECRIRE("\")
        FinSi

        //Jambe gauche
        SI Erreur=9 ALORS
                GoToXY(5,9)
                ECRIRE("/")
        FinSi

        //Jambe droite
        SI Erreur=10 ALORS
                GoToXY(7,9)
                ECRIRE("\")
                GoToXY(12,8)
                ECRIRE("PERDU, APPUYEZ SUR ENTRER")
        FinSi
        FinProcedure

//Tour de jeu
procedure TourDeJeu (var Mot,verif:CHAINE; var LongMot,Trouve,Erreur,compteur:ENTIER; var choix:CARACTERE)
        var
                i:ENTIER

		DEBUT
        
        //Initialisation
        Trouve<--0

        //Boucle de jeu
        REPETER
                //Choix des lettres
                ChoixLettre(Mot,LongMot,choix)

                compteur<--0 //initialisation du compteur d occurences
                POUR i DE 1 A LongMot FAIRE
                        verif<--MAJUSCULE(EXTRACTION(Mot,i,1)) //Variable de verification de chaque lettres, comprenant la lettre transformee en majuscule pour la comparaison qui suit
                        SI (verif=MAJUSCULE(choix)) ALORS //Si les lettres correspondent, majuscules ou minuscules, alors...
                                compteur<--compteur+1 //Incremente le compteur d occurences
                                GoToXY(i+39,3)//Aller sur les emplacement de lettres vides
                                ECRIRE(MAJUSCULE(choix))//On remplace le vide par la lettre en majuscule
                        FinSi
                FinPour

                Trouve<--Trouve+compteur //On ajoute le nombre d occurences au nombre de lettres deja trouvees

                //Verification du compteur pour determiner si la lettre est presente ou non dans le mot
                SI compteur=0 ALORS
                        Erreur<--Erreur+1 //Incremente le compteur d erreur
                FinSi

                //Potence
                Potence(Erreur)
        JUSQU'A (Erreur=10) OR (Trouve=LongMot) //Jusqu'a ce que le pendu soit dessine ou que le mot soit trouve

        SI Trouve=LongMot ALORS
                GoToXY(12,8)
                ECRIRE("GAGNE, APPUYEZ SUR ENTRER")
        FinSi
		FinProcedure

//Programme principal
var
        Mot:CHAINE //Mot choisi
        LongMot:ENTIER //Longueur du mot choisi
        choix:CARACTERE //Choix de la lettre du joueur
        compteur:ENTIER //Compteur d occurences
        Trouve:ENTIER //Nombre de lettres trouvees
        verif:CHAINE //Variable contenant la lettre qu on verifie
        Erreur:ENTIER //Compteur d erreur permettant d afficher la potence

DEBUT
        

        //Creation du mot cache
        CreatMotCache(Mot,LongMot)

        //Affichage des lettres cachées
        AffNbLettres(LongMot)

        //Tour de jeu
        TourDeJeu(Mot,verif,LongMot,Erreur,Trouve,compteur,choix)
END.
